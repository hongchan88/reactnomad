{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","Chart","coinId","useQuery","Math","floor","Date","now","fetchCoinHistory","refetchInterval","isLoading","data","exceptData","chartData","map","i","x","time_close","y","open","high","low","close","type","series","name","options","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","categories","price","fill","gradient","gradientToColors","stops","colors","tooltip","formatter","value","toFixed","PriceWrapper","styled","div","Container","Price","props","ath","Title","h1","accentColor","Loader","span","Header","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","HeaderContainer","Button","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","console","log","Helmet","to","rank","symbol","quotes","USD","description","total_supply","max_supply","path","ath_price","CoinsList","ul","li","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","Router","lightTheme","bgColor","darkTheme","GlobalStyle","createGlobalStyle","App","useState","isDark","setIsDark","onClick","prev","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.926bc9cb.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `https://ohlcv-api.nomadcoders.workers.dev?coinId=${coinId}`\n  ).then((response) => response.json());\n}\n","import { useQuery } from 'react-query';\nimport { fetchCoinHistory } from '../api';\nimport ApexChart from 'react-apexcharts';\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    ['ohlcv', coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n\n  const exceptData = data ?? [];\n  const chartData = exceptData?.map((i) => {\n    return {\n      x: i.time_close,\n      y: [i.open, i.high, i.low, i.close],\n    };\n  });\n\n  return (\n    <div>\n      {isLoading ? (\n        'Loading chart...'\n      ) : (\n        <ApexChart\n          type='candlestick'\n          series={[\n            {\n              name: 'Price',\n              data: chartData,\n            },\n          ]}\n          options={{\n            theme: {\n              mode: 'dark',\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: 'transparent',\n            },\n            grid: { show: false },\n            stroke: {\n              curve: 'smooth',\n              width: 4,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              axisBorder: { show: false },\n              axisTicks: { show: false },\n              labels: { show: false },\n              type: 'datetime',\n              categories: data?.map((price) => price.time_close),\n            },\n            fill: {\n              type: 'gradient',\n              gradient: { gradientToColors: ['#0be881'], stops: [0, 100] },\n            },\n            colors: ['#0fbcf9'],\n            tooltip: {\n              y: {\n                formatter: (value) => `$${value.toFixed(2)}`,\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","import styled from 'styled-components';\n\nconst PriceWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 80%;\n`;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n`;\n\nfunction Price(props: any) {\n  return (\n    <Container>\n      <PriceWrapper>\n        <p>Price</p>\n        <h1>{props?.price}</h1>\n      </PriceWrapper>\n      <PriceWrapper>\n        <p>All Time High</p>\n        <h1>{props?.ath}</h1>\n      </PriceWrapper>\n    </Container>\n  );\n}\n\nexport default Price;\n","import { useQuery } from 'react-query';\nimport { Helmet } from 'react-helmet';\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { fetchCoinInfo, fetchCoinTickers } from '../api';\nimport Chart from './Chart';\nimport Price from './Price';\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Button = styled.div`\n  background-color: white;\n  border: 1px solid black;\n  padding: 5px 10px;\n  border-radius: 10px;\n  margin-top: 10px;\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch('/:coinId/price');\n  const chartMatch = useRouteMatch('/:coinId/chart');\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    ['info', coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    ['tickers', coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  const loading = infoLoading || tickersLoading;\n\n  console.log(infoData, tickersData);\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? 'Loading...' : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <HeaderContainer>\n          <Title>\n            {state?.name ? state.name : loading ? 'Loading...' : infoData?.name}\n          </Title>\n          <Link to={'/'}>\n            <Button>Home</Button>\n          </Link>\n        </HeaderContainer>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes?.USD?.price?.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price\n                price={tickersData?.quotes?.USD?.price}\n                ath={tickersData?.quotes?.USD?.ath_price}\n              />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","import { Helmet } from 'react-helmet';\nimport { useQuery } from 'react-query';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { fetchCoins } from '../api';\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: white;\n  color: ${(props) => props.theme.textColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>('allCoins', fetchCoins);\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import { DefaultTheme } from 'styled-components';\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: 'whitesmoke',\n  textColor: 'black',\n  accentColor: '#9c88ff',\n};\nexport const darkTheme: DefaultTheme = {\n  bgColor: 'black',\n  textColor: 'black',\n  accentColor: '#9c88ff',\n};\n","import styled, { createGlobalStyle } from 'styled-components';\nimport Router from './Router';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './theme';\nimport { useState } from 'react';\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 10px;\n  margin-right: 100px;\n`;\nconst Button = styled.div`\n  background-color: whitesmoke;\n  border: 1px solid black;\n  border-radius: 20px;\n  padding: 10px;\n`;\nfunction App() {\n  const [isDark, setIsDark] = useState(false);\n  const toggleDark = () => setIsDark((prev) => !prev);\n\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <Container>\n          <Button onClick={toggleDark}>\n            {isDark ? 'Light Mode' : 'Dark Mode'}\n          </Button>\n        </Container>\n        <GlobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport App from './App';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}